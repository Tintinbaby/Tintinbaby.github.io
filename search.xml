<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Abaqus批量提交计算</title>
    <url>/2024/05/31/Abaqus%E6%89%B9%E9%87%8F%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<h1 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h1><span id="more"></span>
<p>确保系统变量<code>Path</code>下含有<code>SIMULIA\Commands</code>路径。</p>
<h1 id="编写bat文件"><a href="#编写bat文件" class="headerlink" title="编写bat文件"></a>编写bat文件</h1><p>在<code>XX.bat</code>文件下编写</p>
<p><code>cd filepath</code></p>
<p><code>call abaqus job=&#39;jobname&#39; input=&#39;&#39;inputname user=&#39;subroutine&#39; cpus=n int ask=off</code> </p>
<h1 id="Abaqus内置python实现批量计算"><a href="#Abaqus内置python实现批量计算" class="headerlink" title="Abaqus内置python实现批量计算"></a>Abaqus内置python实现批量计算</h1><pre><code>from abaqusConstants import*
import job

# 使用job-1.inp文件提交job-1的计算任务,numCpus=2设置cpus数，numDomains=2设置线程数
mdb.JobFromInputFile(name=&#39;job-1&#39;,inputFileName=&#39;job-1.inp&#39;,numCpus=2,numDomains=2)
# 提交计算任务
mdb.jobs[&#39;job-1&#39;].submit()
# 中断python文件的执行，等待计算任务的完成。
# 在这里waitForCompletion相当于dos批处理下的参数interactive
mdb.jobs[&#39;job-1&#39;].waitForCompletion()
mdb.JobFromInputFile(name=&#39;job-2&#39;,inputFileName=&#39;job-2.inp&#39;,numCpus=2,numDomains=2)
mdb.jobs[&#39;job-2&#39;].submit()
mdb.jobs[&#39;job-2&#39;].waitForCompletion()

# 导入其他模块
import os,time,sys
# 实现自动关机
o=&quot;c:\windows\system32\shutdown -s -f -t 60&quot;
os.system(o)
</code></pre><h1 id="python-subprocess模块并行提交计算"><a href="#python-subprocess模块并行提交计算" class="headerlink" title="python subprocess模块并行提交计算"></a>python subprocess模块并行提交计算</h1><pre><code>import subprocess
import time
import os

task_list=[]
for volfrac in [0.1,0.2,0.3,0.4,0.5,0.6]:
    for R in [4,5,6]:
        for num in range(1,11):
            for bc in [&quot;Tension_x&quot;,&quot;Tension_y&quot;,&quot;Shear&quot;]:
                task_list.append([volfrac,R,num,bc])

i=0
for volfrac,R,num,bc in task_list:
    file_name=&quot;&#123;&#125;_&#123;&#125;_&#123;&#125;_&#123;&#125;.inp&quot;.format(volfrac,R,num,bc)
    job_name=&quot;Job-&#123;&#125;_&#123;&#125;_&#123;&#125;_&#123;&#125;&quot;.format(int(volfrac*100),R,num,bc)
    subprocess.Popen(&#39;abaqus job=&#123;&#125; input=&#123;&#125; cpus=2 int ask_delete=OFF&#39;.format(job_name,file_name),shell=True)
    print(&quot;&#123;&#125; submitted.&quot;.format(job_name))
    i=i+1

    if i==10:
        i=0
        print(&quot;Waiting...&quot;)
        time.sleep(180)
print(&quot;Finished&quot;)
</code></pre>]]></content>
      <categories>
        <category>FEM</category>
      </categories>
      <tags>
        <tag>Abaqus</tag>
      </tags>
  </entry>
  <entry>
    <title>Tintin博客起源</title>
    <url>/2024/05/31/Blog%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="博客搭建"><a href="#博客搭建" class="headerlink" title="博客搭建"></a>博客搭建</h1><span id="more"></span>
<p>使用Github Pages和Hexo搭建了Tintin的独立博客，主要参考了<a href="https://www.itbob.cn/article/002/">使用Github Pages和Hexo搭建自己的独立博客</a>。</p>
<h1 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h1><p>将博客主题更换为偏简约的<code>Next</code>风格，主要参考了<a href="https://blog.csdn.net/as480133937/article/details/100138838">Hexo-Next主题博客个性化配置</a>。</p>
<h1 id="标签分类问题"><a href="#标签分类问题" class="headerlink" title="标签分类问题"></a>标签分类问题</h1><p>更换主题后发现tags和categories一直打不开，参考<a href="https://blog.csdn.net/Wonz5130/article/details/84666519">解决Hexo搭建博客显示不出分类、标签问题</a>解决问题！</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Tintin的Git仓库</title>
    <url>/2024/06/04/Git%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h1><span id="more"></span>
<p>首先在本地创建ssh key：<br><code>$ ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot;</code></p>
<p>进入github的setting，选择SSH Keys，Add SSH Key，将生成的Key粘贴进去。</p>
<p>在git bash下输入<br><code>$ ssh -T git@github.com</code><br>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access。这就表示已成功连上github。</p>
<p>设置username和email：<br><code>$ git config --global user.name &quot;your name&quot;</code><br><code>$ git config --global user.email &quot;your_email@youremail.com&quot;</code></p>
<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><p>使用当前目录作为Git本地仓库：<br><code>git init</code></p>
<p>使用指定目录作为Git本地仓库:<br><code>git init newrepo</code></p>
<p>向仓库中添加文件：<br><code>git add filename</code></p>
<p>将添加到文件真正的提交到仓库中：<br><code>git commit -m &quot;Adding files&quot;</code></p>
<p>关联本地仓库与github仓库：<br><code>$ git remote add origin &quot;HTTPS&quot;</code><br><code>&quot;HTTPS&quot;</code>是github仓库的HTTPS值。</p>
<p>将本地仓库推送至服务器：<br><code>git push -u oigin main</code></p>
<p>查看提交历史：<br><code>git log</code>.</p>
<p>若仓库事先存在readme文件无法上传，就需要先将其拉回来再上传：<br><code>git pull origin main --allow-unrelated-histories</code></p>
<h1 id="删除仓库"><a href="#删除仓库" class="headerlink" title="删除仓库"></a>删除仓库</h1><p>删除本地仓库文件：<br><code>git rm filename</code></p>
<p>删除本地仓库有文件夹：<br><code>git rm -r dirname</code></p>
<h1 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h1><p>查看本地分支：<br><code>git branch</code></p>
<p>创建分支：<br><code>git branch name</code></p>
<p>切换分支：<br><code>git checkout name</code></p>
<p>合并分支：<br><code>git merge name</code></p>
<p>删除本地分支：<br><code>git branch -d name</code></p>
<p>删除远程分支：<br><code>git push origin -delete name</code></p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>KAN(Kolmogorov-Arnold Network)</title>
    <url>/2024/06/07/KAN/</url>
    <content><![CDATA[<h1 id="MLP的局限性"><a href="#MLP的局限性" class="headerlink" title="MLP的局限性"></a>MLP的局限性</h1><span id="more"></span>
<ol>
<li>梯度消失和梯度爆炸：激活函数的导数连乘可能导致梯度趋于0或异常大。</li>
<li>参数效率低：全连接层导致参数数量迅速增加。</li>
<li>处理高维数据能力有限：MLP没有利用数据的内在结构（图像中的局部空间相关性或文本的序列信息）。</li>
<li>长期依赖问题：MLP难以捕捉输入序列中的长期依赖关系（长时间跨度的相关信息）。</li>
</ol>
<h1 id="KAN数学原理"><a href="#KAN数学原理" class="headerlink" title="KAN数学原理"></a>KAN数学原理</h1><p><strong>柯尔莫果洛夫-阿诺尔德表示定理</strong>（用一组较简单的函数可以表示任何一个多变量的连续函数）：</p>
<script type="math/tex; mode=display">
f(X) = f(x _1, ···, x _n) = \sum _{q=1}^{2n+1} \Phi _{q}(\sum _{p=1}^{n} \Phi _{q,p} (x _{p}))</script><p>上式可表示为一个两层的神经网络，与MLP的区别在于：</p>
<ol>
<li>没有对输入进行线性组合而是直接对输入进行激活；</li>
<li>激活函数并不固定，需要学习。</li>
</ol>
<p>与MLP每层线性组合后统一进行非线性空间变化相比，KAN对每个输入单独进行非线性变换，再进行线性组合（没有了激活函数和参数矩阵的嵌套，而是非线性函数的直接嵌套）。</p>
<script type="math/tex; mode=display">
KAN(x) = (\Phi _3 \circ \Phi _2 \circ \Phi _1)(x)</script><script type="math/tex; mode=display">
MLP(x) = (\omega _3 \circ \sigma _3 \circ \omega _2  \circ \sigma _2 \circ \omega _1)(x)</script><p>上式中： <strong><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.633ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 722 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="3A6" d="M312 622Q310 623 307 625T303 629T297 631T286 634T270 635T246 636T211 637H184V683H196Q220 680 361 680T526 683H538V637H511Q468 637 447 635T422 631T411 622V533L425 531Q525 519 595 466T665 342Q665 301 642 267T583 209T506 172T425 152L411 150V61Q417 55 421 53T447 48T511 46H538V0H526Q502 3 361 3T196 0H184V46H211Q231 46 245 46T270 47T286 48T297 51T303 54T307 57T312 61V150H310Q309 151 289 153T232 166T160 195Q149 201 136 210T103 238T69 284T56 342Q56 414 128 467T294 530Q309 532 310 533H312V622ZM170 342Q170 207 307 188H312V495H309Q301 495 282 491T231 469T186 423Q170 389 170 342ZM415 188Q487 199 519 236T551 342Q551 384 539 414T507 459T470 481T434 491T415 495H410V188H415Z"></path></g></g></g></svg></mjx-container></strong> = <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex;" xmlns="http://www.w3.org/2000/svg" width="5.784ex" height="2.347ex" role="img" focusable="false" viewBox="0 -750 2556.5 1037.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="msub" transform="translate(500,0)"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z"></path></g><g data-mml-node="TeXAtom" transform="translate(629,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(738,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2056.5,0)"><path data-c="7D" d="M65 731Q65 745 68 747T88 750Q171 750 216 725T279 670Q288 649 289 635T291 501Q292 362 293 357Q306 312 345 291T417 269Q428 269 431 266T434 250T431 234T417 231Q380 231 345 210T298 157Q293 143 292 121T291 -28V-79Q291 -134 285 -156T256 -198Q202 -250 89 -250Q71 -250 68 -247T65 -230Q65 -224 65 -223T66 -218T69 -214T77 -213Q91 -213 108 -210T146 -200T183 -177T207 -139Q208 -134 209 3L210 139Q223 196 280 230Q315 247 330 250Q305 257 280 270Q225 304 212 352L210 362L209 498Q208 635 207 640Q195 680 154 696T77 713Q68 713 67 716T65 731Z"></path></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="16.642ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 7355.5 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(780.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1836.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2336.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2781.2,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3281.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(3725.9,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(4226.1,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(4726.3,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(5004.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="msub" transform="translate(6004.3,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(633,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(345,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></g></g></svg></mjx-container>, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.452ex;" xmlns="http://www.w3.org/2000/svg" width="17.301ex" height="2.149ex" role="img" focusable="false" viewBox="0 -750 7647 950"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(737.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(1793.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2293.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(2738.2,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(3238.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mo" transform="translate(3682.9,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(4183.1,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mo" transform="translate(4683.3,0)"><path data-c="B7" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(4961.3,0)"><text data-variant="italic" transform="scale(1,-1)" font-size="884px" font-family="serif" font-style="italic">，</text></g><g data-mml-node="msub" transform="translate(5961.3,0)"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(633,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(485,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1057,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p>所有的非线性函数<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.633ex" height="1.545ex" role="img" focusable="false" viewBox="0 -683 722 683"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="3A6" d="M312 622Q310 623 307 625T303 629T297 631T286 634T270 635T246 636T211 637H184V683H196Q220 680 361 680T526 683H538V637H511Q468 637 447 635T422 631T411 622V533L425 531Q525 519 595 466T665 342Q665 301 642 267T583 209T506 172T425 152L411 150V61Q417 55 421 53T447 48T511 46H538V0H526Q502 3 361 3T196 0H184V46H211Q231 46 245 46T270 47T286 48T297 51T303 54T307 57T312 61V150H310Q309 151 289 153T232 166T160 195Q149 201 136 210T103 238T69 284T56 342Q56 414 128 467T294 530Q309 532 310 533H312V622ZM170 342Q170 207 307 188H312V495H309Q301 495 282 491T231 469T186 423Q170 389 170 342ZM415 188Q487 199 519 236T551 342Q551 384 539 414T507 459T470 481T434 491T415 495H410V188H415Z"></path></g></g></g></svg></mjx-container>都采用同样的函数结构，只是用不同的参数来控制其形状。</p>
<h1 id="KAN网络架构"><a href="#KAN网络架构" class="headerlink" title="KAN网络架构"></a>KAN网络架构</h1><p>根据柯-阿定理，KAN网络某一层输入为<code>n</code>个，则该层的输出为<code>2n+1</code>个。</p>
<script type="math/tex; mode=display">
X _{l+1} = \Phi _l X _l = \begin{matrix} \phi _{l,j,i} \end{matrix} X _l</script><script type="math/tex; mode=display">
\begin{matrix} \phi _{l,j,i} \end{matrix} = 
\begin{pmatrix}
\phi _{l,1,1}(·) & \phi _{l,1,2}(·) & \cdots & \phi _{l,1,n _l}(·)  \\\
\phi _{l,2,1}(·) & \phi _{l,2,2}(·) & \cdots & \phi _{l,2,n _l}(·) \\\
\vdots & \vdots & \ddots & \vdots \\\
\phi _{l,n _{l+1},1}(·) & \phi _{l,n _{l+1},2}(·) & \cdots & \phi _{l,n _{l+1},n _l}(·) \\\
\end{pmatrix}</script><p>进一步的，抛弃<code>n</code>个输入得到<code>2n+1</code>个输出的限制，隐层节点数量可以自由发挥。</p>
<p>多层函数级联可写为：</p>
<script type="math/tex; mode=display">
KAN(X) = (\Phi _{l-1} \circ \Phi _{l-2} \circ \cdots \circ \Phi _1 \circ \Phi _0) x</script><p><strong>激活函数</strong>(残差激活函数): 基础函数b(x)和样条函数spline(x)的总和</p>
<script type="math/tex; mode=display">
\phi (x) = \omega (b(x) + spline(x))</script><h1 id="KAN准确性提升"><a href="#KAN准确性提升" class="headerlink" title="KAN准确性提升"></a>KAN准确性提升</h1><p>MLP通过增加模型的宽度和深度来提高性能。<br>KAN开始可以用较少的参数训练，然后通过简单的细化样条网格来增加参数，无需重新训练模型(grid extension)。</p>
<h1 id="KAN可解释性提升"><a href="#KAN可解释性提升" class="headerlink" title="KAN可解释性提升"></a>KAN可解释性提升</h1><p>使用稀疏正则化和剪枝技术从较大的KAN开始训练，剪枝后的KAN更容易解释。  </p>
<ol>
<li><strong>稀疏化</strong>：使用L1正则化促进权重的稀疏性。  </li>
<li><strong>剪枝</strong>：通过剪枝技术移除不重要的连接和神经元。  </li>
<li><strong>设定特定激活函数</strong>：根据剪枝后的神经元特性，手动设置或调整特定神经元的激活函数。  </li>
<li><strong>训练仿射函数</strong>：对模型参数再次训练。  </li>
<li><strong>符号化</strong>：输出对原始目标函数的一个近似表示（符号公式）。</li>
</ol>
]]></content>
      <categories>
        <category>Deep Learning</category>
      </categories>
      <tags>
        <tag>KAN</tag>
      </tags>
  </entry>
  <entry>
    <title>初识Markdown</title>
    <url>/2024/05/30/%E5%88%9D%E8%AF%86Markdown/</url>
    <content><![CDATA[<h1 id="Markdown下载"><a href="#Markdown下载" class="headerlink" title="Markdown下载"></a>Markdown下载</h1><span id="more"></span>
<p>选择<a href="http://markdownpad.com/" title="MarkdownPad2下载地址">MarkdownPad2</a>作为我接触md以来的第一款编辑器。<br>安装后发现无法正常使用，出现This view has crashed! 那能忍吗？赶紧百度了一下，发现这个问题从Windows8开始就出现了（我的系统是Win11），解决这个问题还需要安装<a href="http://markdownpad.com/download/awesomium_v1.6.6_sdk_win.exe" title="Awesomium 1.6.6 SDK下载地址">Awesomium 1.6.6 SDK</a>，下载安装后就可以正常使用啦！</p>
<h1 id="md语法学习"><a href="#md语法学习" class="headerlink" title="md语法学习"></a>md语法学习</h1><p>md语法主要通过<a href="https://markdown.com.cn/" title="官方教程网址">Markdown 官方教程</a>学习，这里做一个简要的记录。</p>
<h2 id="标题语法"><a href="#标题语法" class="headerlink" title="标题语法"></a>标题语法</h2><p><code>#</code> + <code>标题内容</code>即可创建标题，<code>#</code>数量代表了标题的级别。</p>
<h2 id="段落语法"><a href="#段落语法" class="headerlink" title="段落语法"></a>段落语法</h2><p>用空白行将文本分隔即可创建段落。</p>
<h2 id="换行语法"><a href="#换行语法" class="headerlink" title="换行语法"></a>换行语法</h2><p>在一行的末尾添加两个以上空格，按回车键即可创建一个换行。</p>
<h2 id="强调语法"><a href="#强调语法" class="headerlink" title="强调语法"></a>强调语法</h2><h3 id="粗体强调"><a href="#粗体强调" class="headerlink" title="粗体强调"></a>粗体强调</h3><p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p>
<h3 id="斜体强调"><a href="#斜体强调" class="headerlink" title="斜体强调"></a>斜体强调</h3><p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p>
<h3 id="粗体和斜体强调"><a href="#粗体和斜体强调" class="headerlink" title="粗体和斜体强调"></a>粗体和斜体强调</h3><p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p>
<h2 id="引用语法"><a href="#引用语法" class="headerlink" title="引用语法"></a>引用语法</h2><p>要创建块引用，请在段落前添加一个&gt;符号。<br>块引用可以嵌套。在要嵌套的段落前添加一个&gt;&gt;符号。</p>
<h2 id="代码语法"><a href="#代码语法" class="headerlink" title="代码语法"></a>代码语法</h2><p>要将单词或短语表示为代码，请将其包裹在反引号`中。<br>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。</p>
<h2 id="分隔线语法"><a href="#分隔线语法" class="headerlink" title="分隔线语法"></a>分隔线语法</h2><p>要创建分隔线，请在单独一行上使用三个或多个星号(<em>*</em>)、破折号(—-)或下划线 (___)，并且不能包含其他内容。</p>
<h2 id="链接语法"><a href="#链接语法" class="headerlink" title="链接语法"></a>链接语法</h2><p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。</p>
<p>超链接Markdown语法代码：<code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p>
<h2 id="图片语法"><a href="#图片语法" class="headerlink" title="图片语法"></a>图片语法</h2><p>要添加图像，请使用感叹号(!), 然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p>
<p>插入图片Markdown语法代码：<code>![图片alt](图片链接 &quot;图片title&quot;)</code>。</p>
<p>给图片增加链接，请将图像的Markdown括在方括号中，然后将链接添加在圆括号中。</p>
<h1 id="MathJax-安装"><a href="#MathJax-安装" class="headerlink" title="MathJax 安装"></a>MathJax 安装</h1><p>为在MarkdownPad中显示数学公式，还需要安装<a href="https://github.com/mathjax/MathJax">MathJax</a>。</p>
<p>安装完成后，在MarkdownPad2中进行配置，在Tools下的Options中找到Advanced选项，打开HTML Head Editor，输入</p>
<pre><code>&lt;script type=&quot;text/javascript&quot; id=&quot;MathJax-script&quot; async
  src=&quot;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-svg.js&quot;&gt;
&lt;/script&gt;
&lt;script id=&quot;MathJax-script&quot; async
    src=&quot;tex-svg.js安装路径&quot;&gt;
&lt;/script&gt;
</code></pre><p>此时按下F6，即看到数学公式。</p>
]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2024/05/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>syntax</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
